#!/usr/bin/env node
/**************************************************************
 * Executable Node.js User's Colorful Manual for Command-line.
 *
 * @author nanhpark <http://nodeqa.com>
 * @date 2012-03-30
 *************************************************************/

/**
 * Module dependencies.
 */
var colors = require('colors'),
    nodeman = require('../'),
    path = require('path'),
    fs = require('fs');

/**
 * usage
 */
var usage = ''
  + '\n'
  + '  Usage: nodeman [module_name]\n'.yellow
  + '\n'
  + '  Options:\n'
  + '    -b, --builtin           show module_name list\n'
  + '    -h, --help              output help information\n'
  ;

/**
 * check module
 */
var args = process.argv.slice(2),
    moduleName;

if (!args.length) {
    abort(usage);
}

while (args.length) {
    var arg = args.shift();
    switch (arg) {
        case '-h':
        case '--help':
            abort(usage);
            break;
        case '-b':
        case '--builtin':
            nodeman.builtin();
            return;
            break;
        default:
            moduleName = arg;
            nodeman.help(moduleName, function(err) {
                abort(err);
            });
            break;
    }
}

/**
 * builtin list
 *
 * @return void
 */
function builtin() {
    var docs = path.resolve(__dirname, '..', 'docs');
    fs.readdir(docs, function(err, files) {
        if (err) throw new Error(err);

        var __builtin__ = [];
        files.forEach(function(file) {
            if (!/_doc/.test(file)) return;

            __builtin__.push(file.replace(/_doc.js/g, ''));
        });

        //console.log('\033[2J');
        console.log('    Current embed moduleName list'.red);
        console.log('    --------------------------------');
        console.log();
        console.log('    ' + __builtin__.join(', '));
        console.log();
    });
}
/**
 * console.error && process exit
 */
function abort(str) {
    console.error(str);
    process.exit(1);
}
